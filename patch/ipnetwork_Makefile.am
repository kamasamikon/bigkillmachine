if ENABLE_TEST
SUBDIRS = . test
endif

IP_NETWORK_PC=ipnetwork.pc
pkgconfigdir = $(libdir)/pkgconfig
pkgconfig_DATA = $(IP_NETWORK_PC)

AM_CPPFLAGS =                                      \
	$(BUILD_CFLAGS)                            \
	-I$(top_srcdir)                            \
	-I$(top_builddir)                          \
	$(IP_CFLAGS)                               \
	$(IPNETWORK_CFLAGS)                             

BUILD_ERR = -Werror=shadow -Werror=undef -Werror=uninitialized -Werror=implicit -Werror=missing-prototypes
BUILD_WARN = -Wall -Wunreachable-code -Wparentheses -Wswitch -Wcast-align
AM_CFLAGS = $(BUILD_WARN) $(BUILD_ERR)

bin_PROGRAMS = ipnetwork 

bin_PROGRAMS += dhclientscript
dhclientscript_SOURCES = dhclient_script/script.c

dhclientscript_LDADD =                     \
	-lglib-2.0                         \
        -lrt 

dhclientscript_LDADD += -lsysutils
dhclientscript_CFLAGS =-Wl,-rpath,/lib:/usr/lib:/usr/local/lib

ipnetwork_SOURCES =                            \
	ipnetwork.h                            \
	ipnetwork.c                            \
	ip_interface.h                         \
	ip_interface.c                         \
	ipnetwork_controller.c                 \
	ipnetwork_controller.h                 \
	ipnetwork_mgr.c                        \
	ipnetwork_mgr.h                        \
	ipnetwork_server.h                     \
	ipnetwork_process.h                    \
	ipnetwork_process.c                    \
	ipnetwork_configman.h                  \
	ipnetwork_configman.c                  \
	ipnetwork_devices.h                    \
	ipnetwork_devices.c                    \
	ipnetwork_state.h                      \
	ipnetwork_state.c                      \
	ipnetwork_linux.h                      \
	ipnetwork_linux.c                      \
	ipnetwork_lpm.h                        \
	ipnetwork_lpm.c                        \
	ipnetwork_dhcp.h                        \
	ipnetwork_dhcp.c                        \
	ipnetwork_global.h		       \
	ipc_client_stb.c		       \
	ipc_define.h

ipnetwork_LDADD =                              \
	-lresolv                               \
	-ldevproxy                             \
	-lrt                                   \
	$(IPNETWORK_LIBS)

dbus_sources =                                  \
	ipnetwork_server.h			\
	ipnetwork_client.h          \
	ipnetwork_native_server.h   \
	ipnetwork_native_client.h			

marshal_sources =                               \
	ipnetwork_marshal.h                     \
	ipnetwork_marshal.c
	
	
lib_LTLIBRARIES = libipnetwork.la
libipnetwork_la_SOURCES =                    \
                          $(marshal_sources) \
                          $(dbus_sources)    \
                          ipnetwork_client.c \
                          ipnetwork_client.h
                          
                          
libipnetwork_la_LIBADD = $(IPNETWORK_LIBS)
libipnetwork_ladir =  $(includedir)/ipnetwork
libipnetwork_la_HEADERS = ipnetwork.h ipnetwork_global.h
	


ipnetwork_marshal.h: ipnetwork_marshal.list
	$(AM_V_GEN)$(GLIB_GENMARSHAL) $< --prefix=ipnetwork_marshal --header > $@

ipnetwork_marshal.c: ipnetwork_marshal.list
	$(AM_V_GEN)echo "#include \"ipnetwork_marshal.h\"" > $@ && \
		$(GLIB_GENMARSHAL) $< --prefix=ipnetwork_marshal --body >> $@

ipnetwork_server.h: $(top_srcdir)/ipnetwork.xml
	$(AM_V_GEN)$(DBUSBINDINGTOOL) --mode=glib-server --output=$@ --prefix=ipnetwork_service $^

ipnetwork_client.h: $(top_srcdir)/ipnetwork.xml
	$(AM_V_GEN)$(DBUSBINDINGTOOL) --mode=glib-client --output=$@ --prefix=ipnetwork_service $^
	
ipnetwork_native_server.h: $(top_srcdir)/ipnetwork_native.xml
	$(AM_V_GEN)$(DBUSBINDINGTOOL) --mode=glib-server --output=$@ --prefix=ipnetwork_native_service $^

ipnetwork_native_client.h: $(top_srcdir)/ipnetwork_native.xml
	$(AM_V_GEN)$(DBUSBINDINGTOOL) --mode=glib-client --output=$@ --prefix=ipnetwork_native_service $^

ipnetwork-stripped.xml: ipnetwork.xml
	$(AM_V_GEN) cat $^ | sed '/<!--.*-->/d' | sed '/<!--/,/-->/d' > $@
	
ipnetworkintrospectdir = ${prefix}/dbus-xml
ipnetworkintrospect_DATA = ipnetwork-stripped.xml 

BUILT_SOURCES =                                        \
	$(dbus_sources)                                \
	$(marshal_sources)
	


CLEANFILES = $(BUILT_SOURCES)

EXTRA_DIST = ipnetwork_marshal.list $(ipnetworkintrospect_DATA)
