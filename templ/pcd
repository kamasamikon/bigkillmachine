#!/bin/sh

ALIAS_LIST_FILE=/tmp/alias.list
BBCMDS=`busybox --list`
for CMD in ${BBCMDS}; do
    echo "alias ${CMD}='busybox ${CMD}'" >> ${ALIAS_LIST_FILE}
done

source ${ALIAS_LIST_FILE}

if [ -e /home/ntvroot/pcd ]; then
    echo
    echo "++++++++++++++++++++++++++++++++++"
    echo "/home/ntvroot/pcd found, will call this instead of /usr/sbin/pcd"
    echo "----------------------------------"
    echo
    chmod +x /home/ntvroot/pcd
    /home/ntvroot/pcd $@
    exit
fi

NMENV=/tmp/nm.env

# Create the Env file
initenv() {
    echo -n "" > ${NMENV}
    echo '## KLOG_DFCFG="Default configure file"' >> ${NMENV}
    echo '## KLOG_RTCFG="Runtime configure file"' >> ${NMENV}
    echo '## KLOG_TO_LOCAL="Local file for klog"' >> ${NMENV}
    echo '## KLOG_TO_REMOTE="Remote URL for klog"' >> ${NMENV}
    echo '## KLOG_TO_SYSLOG=YES|NO' >> ${NMENV}
    echo '## LD_PRELOAD="Path for preload nemohook.so etc"' >> ${NMENV}
    echo '## NH_SYSLOG_NOREAL=YES|NO' >> ${NMENV}
    echo '## PCDOUT="Local file to save PCD log"' >> ${NMENV}
    echo '' >> ${NMENV}
    echo '# export NH_DBUS_SKIP=YES' >> ${NMENV}
    echo '# export NH_IOCTL_SKIP=YES' >> ${NMENV}
    echo '# export NH_SQLITE_SKIP=YES' >> ${NMENV}
    echo '# export NH_SYSLOG_SKIP=YES' >> ${NMENV}
    echo '' >> ${NMENV}
    echo '# export LD_LIBRARY_PATH=/tmp/lib:$LD_LIBRARY_PATH' >> ${NMENV}
    echo '# export LD_LIBRARY_PATH=/mnt/lib:$LD_LIBRARY_PATH' >> ${NMENV}
    echo '' >> ${NMENV}
    echo '# export KLOG_DFCFG=/tmp/klog.df.cfg' >> ${NMENV}
    echo '# export KLOG_RTCFG=/tmp/klog.rt.cfg' >> ${NMENV}
    echo '' >> ${NMENV}
    echo '# export KLOG_TO_LOCAL=/tmp/klog.log' >> ${NMENV}
    echo '# export KLOG_TO_LOCAL=/dev/null' >> ${NMENV}
    echo 'export KLOG_TO_LOCAL=/dev/stdout' >> ${NMENV}
    echo '' >> ${NMENV}
    echo '# export KLOG_TO_REMOTE="XXX"' >> ${NMENV}
    echo '# export KLOG_TO_SYSLOG=YES' >> ${NMENV}
    echo '' >> ${NMENV}
    echo '# export LD_PRELOAD=/usr/lib/libnemohook.so' >> ${NMENV}
    echo '# export LD_PRELOAD=/usr/lib/libnilklog.so' >> ${NMENV}
    echo '' >> ${NMENV}
    echo '# export NH_SYSLOG_NOREAL=YES' >> ${NMENV}
    echo '# export PCDOUT=/dev/null' >> ${NMENV}
    echo '# export PCDOUT=/tmp/pcd.out' >> ${NMENV}
    echo '' >> ${NMENV}
}

pushenv () {
    echo "export $1" >> ${NMENV}
}

initenv

# Dump boot command line
echo
echo "++++++++++++ /proc/cmdline ++++++++++++"
cat /proc/cmdline
echo "------------ /proc/cmdline ------------"
echo

grep "\bkl2syslog\b" -w -o /proc/cmdline
if [ "$?" == "0" ]; then
    pushenv KLOG_TO_SYSLOG=YES
fi

KLOG_DFCFG=/tmp/klog.df.cfg
pushenv KLOG_DFCFG=${KLOG_DFCFG}
KLOG_RTCFG=/tmp/klog.rt.cfg
pushenv KLOG_RTCFG=${KLOG_RTCFG}

# Remote Default klog configure, if exists, overwrite the default one
KLOG_DFCFG_ALT=`grep "\bklcfg=.*" -o /proc/cmdline | cut -d ' ' -f1 | awk -F= '{ print $2 }'`
if [ "$KLOG_DFCFG_ALT" != "" ]; then
    wget "${KLOG_DFCFG_ALT}" -O ${KLOG_DFCFG}
    cat ${KLOG_DFCFG}
fi

# KLOG Save to remote
KLOG_TO_REMOTE=`grep "\bkl2remote=.*" -o /proc/cmdline | cut -d ' ' -f1 | awk -F= '{ print $2 }'`
if [ "$KLOG_TO_REMOTE" != "" ]; then
    pushenv KLOG_TO_REMOTE=${KLOG_TO_REMOTE}
fi

# KLOG Save to file
KLOG_TO_LOCAL=`grep "\bkl2local=.*" -o /proc/cmdline | cut -d ' ' -f1 | awk -F= '{ print $2 }'`
if [ "$KLOG_TO_LOCAL" != "" ]; then
    pushenv KLOG_TO_LOCAL=${KLOG_TO_LOCAL}
fi

# PCD output
xPCDOUT=`grep "\bpcdout=.*" -o /proc/cmdline | cut -d ' ' -f1 | awk -F= '{ print $2 }'`
if [ "$xPCDOUT" != "" ]; then
    pushenv PCDOUT=${xPCDOUT}
fi

# HOOK
# preload=/lib/libnemohook.so
PRELOAD=`grep "\bpreload=.*" -o /proc/cmdline | cut -d ' ' -f1 | awk -F= '{ print $2 }'`
if [ "$PRELOAD" != "" ]; then
    pushenv LD_PRELOAD=${PRELOAD}
fi

echo
echo "++++++++++++ ${NMENV} ++++++++++++"
cat ${NMENV}
echo "------------ ${NMENV} ------------"
echo

grep "\bklnoshell\b" -w -o /proc/cmdline
if [ "$?" == "0" ]; then
    echo "Skip kl shell"
else
    # Give user a chance to edit klog configure files
    echo "+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
    echo "Into new shell to edit ${NMENV}, Ctrl-D to quit and continue"
    echo "+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
    echo
    touch ${KLOG_DFCFG}
    touch ${KLOG_RTCFG}
    PS1="klog@(${NMENV})$ " sh
fi

source ${NMENV}

# Make sure the klog cfg file exist
touch ${KLOG_DFCFG}
touch ${KLOG_RTCFG}

# KLOG Agent is a opt-rpc-server
/usr/bin/klagent.sh ${KLOG_RTCFG} &

if [ ${PCDOUT} ]; then
    PCD_OUT_CMD=" -v &> ${PCDOUT}"
else
    PCD_OUT_CMD=""
fi

echo
echo "Will call REAL pcd: \"/usr/sbin/pcd.real\""
echo "If /tmp/pcd.rules.alt exit, will use it"
echo
if [ -e /tmp/pcd.rules.alt ]; then
    echo "++++++++++++++++++++++++++++++++++"
    echo "/tmp/pcd.rules.alt found, will use it"
    echo "----------------------------------"

    /usr/sbin/pcd.real -f /tmp/pcd.rules.alt ${PCD_OUT_CMD}
else
    /usr/sbin/pcd.real $@ ${PCD_OUT_CMD}
fi

